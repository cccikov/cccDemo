*{
    padding:0;
    margin:0;
}
.content{
    padding: 5px 0 0 0;//本来这里padding-right应该5px才对,但是由于图片有些太后面的小数点会忽略,所以图片实际的计算宽度会小一点,所以padding-right就不用设置了
    margin:10px;
    // border: 1px solid #eee;
    list-style: none;
    &:after{
        content:"";
        display:block;
        clear:both;
    }
    .img-wrap{
        float: left;
        margin: 0 0 5px 5px;
        img{
            display: block;// 图片底部有3px问题.
            // height:100%; 删除是因为不再使用通过改变图片父元素的高度来改变图片尺寸,有些浏览器(就是360),改变了li的高度后,内容(img)改变了宽度,但是不会自动改变li的宽度,li还是会保持大图片的宽度

            // img{
            //     height:100%;
            // }如果在chrome里面这样设置,不设置img为块元素,也会出现想360浏览器那种情况.li不会变宽度.可能是因为display:inline-block元素不是根据父元素宽度来布局,不会触发li重绘/重构.
            // 但是如果用js取消li的浮动,再设置回浮动,布局就正常了

            // 现在改为直接改变图片宽度,由于float的大小是由内容决定的,直接改变内容(img)的尺寸,触发li重绘/重构
        }
    }
}